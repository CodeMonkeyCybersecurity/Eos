#!/bin/bash

# Function to check SSH connection
check_ssh_connection() {
    local ssh_path=$1

    # Extract username and host from the SSH path
    local user=$(echo "$ssh_path" | awk -F '[@:]' '{print $1}')
    local host=$(echo "$ssh_path" | awk -F '[@:]' '{print $2}')

    echo "Checking SSH connection to $user@$host..."
    
    # Check if the user and host are correctly parsed
    if [ -z "$user" ] || [ -z "$host" ]; then
        echo "Error: Unable to parse SSH path. Please enter a valid SSH path in the format ssh://username@host."
        exit 1
    fi

    # Attempt to SSH into the host
    ssh -o BatchMode=yes -o ConnectTimeout=5 "$user@$host" 'exit' > /dev/null 2>&1

    if [ $? -ne 0 ]; then
        echo "Error: Unable to connect via SSH to $host as $user. Please verify your SSH credentials."
        exit 1
    else
        echo "SSH connection successful."
    fi
}

# Function to check Borg repository path
check_repo_path() {
    local repo_path=$1

    echo "Checking Borg repository path: $repo_path..."
    borg list "$repo_path" > /dev/null 2>&1

    if [ $? -ne 0 ]; then
        echo "Error: Unable to access the repository at $repo_path. Please verify the repository path."
        exit 1
    else
        echo "Repository path is valid and accessible."
    fi
}

# Function to ensure the SSH path is correctly formatted
ensure_ssh_prefix() {
    local path=$1
    if [[ "$path" != ssh://* ]]; then
        path="ssh://$path"
    fi
    echo "$path"
}

# Function to troubleshoot Borg repository
troubleshoot_borg_repo() {
    read -p "Enter the BORG_REPO path (e.g., /mnt/borg-repo or ssh://username@host:/path/to/repo): " BORG_REPO
    BORG_REPO=$(ensure_ssh_prefix "$BORG_REPO")

    # Extract SSH path from BORG_REPO for SSH check
    SSH_PATH=$(echo "$BORG_REPO" | awk -F '://' '{print $2}')

    # Check SSH connection
    check_ssh_connection "$SSH_PATH"

    # Check Borg repository path
    check_repo_path "$BORG_REPO"
}

# Run the troubleshooting steps
troubleshoot_borg_repo
